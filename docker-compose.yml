services:
  webapi:
    build:
      context: .
      dockerfile: src/WebAPI/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      azure-sql-edge:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=azure-sql-edge,1433;Database=AdessoLeagueDb;User Id=sa;Password=Secret@Cat123!;Encrypt=False;TrustServerCertificate=True;
      - RabbitMQ__ConnectionString=amqp://admin:Secret%40Rabbit123!@rabbitmq:5672
    restart: unless-stopped
    networks:
      - adesso-network

  event-monitor:
    build:
      context: .
      dockerfile: src/Event.Monitor/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RabbitMQ__ConnectionString=amqp://admin:Secret%40Rabbit123!@rabbitmq:5672
    restart: unless-stopped
    networks:
      - adesso-network

  azure-sql-edge:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=Secret@Cat123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"  
    volumes:
      - sql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Secret@Cat123!' -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - adesso-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Secret@Rabbit123!
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # AMQP port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - adesso-network

volumes:
  sql-data:
  rabbitmq-data:

networks:
  adesso-network:
    driver: bridge